% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clone_id.R
\name{Clone ID}
\alias{Clone ID}
\alias{clone_id}
\alias{cell_assign_EM}
\alias{cell_assign_Gibbs}
\title{Infer clonal identity of single cells}
\usage{
clone_id(A, D, Config, model = "binomial", inference = "sampling",
  verbose = TRUE, ...)

cell_assign_EM(A, D, Config, Psi = NULL, model = "binomial",
  Bernoulli_threshold = 1, min_iter = 10, max_iter = 1000,
  logLik_threshold = 1e-05, verbose = TRUE)

cell_assign_Gibbs(A, D, Config, Psi = NULL, A_germ = NULL,
  D_germ = NULL, relax_Config = FALSE, relax_prior = c(1, 9),
  prior0 = c(0.2, 99.8), prior1 = c(0.45, 0.55), model = "binomial",
  Bernoulli_threshold = 1, min_iter = 3000, max_iter = 10000,
  wise = "variant", verbose = TRUE)
}
\arguments{
\item{A}{variant x cell matrix of integers; number of alternative allele
reads in variant i cell j}

\item{D}{variant x cell matrix of integers; number of total reads covering
variant i cell j}

\item{Config}{variant x clone matrix of binary values. The clone-variant
configuration, which encodes the phylogenetic tree structure. This is the
output Z of Canopy}

\item{model}{character(1), the model to use for inference; either "binomial"
to use the beta-binomial mixture model or "Bernoulli" to use the Bernoulli
mixure model (default: "binomial")}

\item{inference}{character(1), the method to use for inference, either
"sampling" to use Gibbs sampling (default) or "EM" to use
expectation-maximisation (faster)}

\item{verbose}{logical(1), should the function output verbose information as
it runs?}

\item{...}{arguments passed to \code{\link{cell_assign_Gibbs}} or
\code{\link{cell_assign_EM}} (as appropriate)}

\item{Psi}{A vector of float. The fractions of each clone, output P of Canopy}

\item{Bernoulli_threshold}{An integer. The count threshold of alteration
reads when using Bernoulli model.}

\item{min_iter}{A integer. The minimum number of iterations in the Gibbs
sampling. The real iteration may be longer utile the convergence.}

\item{max_iter}{A integer. The maximum number of iterations in the Gibbs
sampling, even haven't passed the convergence diagnosis}

\item{logLik_threshold}{A float. The threshold of logLikelihood increase for
detecting convergence.}

\item{A_germ}{A matrix of integers. Number of alteration reads in germline
heterozygous site for variant i cell j}

\item{D_germ}{A matrix of integers. Number of reads depth in germline
heterozygous site for variant i cell j}

\item{relax_Config}{bool(1), If TRUE, relaxing the Clone Configuration by
changing it from fixed value to act as a prior Config with a relax rate.}

\item{relax_prior}{numeric(2), the two parameters of beta prior distribution
on the relax rate for relaxing the clone Configuration.}

\item{prior0}{numeric(2), alpha and beta parameters for the Beta prior
distribution on the inferred false positive rate.}

\item{prior1}{numeric(2), alpha and beta parameters for the Beta prior
distribution on the inferred (1 - false negative) rate.}

\item{wise}{A string, the wise of parameters for theta1: global, variant,
element.}
}
\value{
If inference method is "EM", a list containing \code{theta}, a vector of
two floats denoting the parameters of the two componets of the base model,
i.e., mean of Bernoulli or binomial model given variant exists or not,
\code{prob}, the matrix of posterior probabilities of each cell belonging to
each clone with fitted parameters, and \code{logLik}, the log likelihood of
the final parameters.

If inference method is "sampling", a list containing: \code{theta0}, the mean
of sampled false positive parameter values; \code{theta1} the mean of sampled
(1 - false negative rate) parameter values; \code{theta0_all}, all sampled
false positive parameter values; \code{theta1_all}, all sampled (1 - false
negative rate) parameter values; \code{element}; \code{logLik_all},
log-likelihood for model for all sampled parameter sets; \code{prob_all};
\code{prob}, matrix with mean of sampled cell-clone assignment posterior
probabilities (the key output of the model); \code{prob_variant}.

a list containing \code{theta}, a vector of two floats denoting the
parameters of the two componets of the base model, i.e., mean of Bernoulli or
binomial model given variant exists or not, \code{prob}, the matrix of
posterior probabilities of each cell belonging to each clone with fitted
parameters, and \code{logLik}, the log likelihood of the final parameters.
}
\description{
Infer clonal identity of single cells

Assign cells to clones using an EM algorithm

Assign cells to clones using a Gibbs sampling algorithm
}
\details{
The two Bernoulli components correspond to false positive and false negative
rates. The two binomial components correspond to the read distributions
with and without the mutation present.
}
\examples{
data(example_donor)
assignments <- clone_id(A_clone, D_clone, Config = tree$Z)
prob_heatmap(assignments$prob)

assignments_EM <- clone_id(A_clone, D_clone, Config = tree$Z, inference = "EM")
prob_heatmap(assignments_EM$prob)

assignments_bern <- clone_id(A_clone, D_clone, Config = tree$Z, model = "Bernoulli")
prob_heatmap(assignments_bern$prob)

assignments_bern_EM <- clone_id(A_clone, D_clone, Config = tree$Z, model = "Bernoulli",
                                 inference = "EM")
prob_heatmap(assignments_bern_EM$prob)

assignments_binom <- cell_assign_EM(A_clone, D_clone, Config = tree$Z, model = "binomial")
assignments_bern <- cell_assign_EM(A_clone, D_clone, Config = tree$Z, model = "Bernoulli")

assignments_binom <- cell_assign_Gibbs(A_clone, D_clone, Config = tree$Z, model = "binomial")
assignments_bern <- cell_assign_Gibbs(A_clone, D_clone, Config = tree$Z, model = "Bernoulli")

}
\author{
Yuanhua Huang and Davis McCarthy
}
